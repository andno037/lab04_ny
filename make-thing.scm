(define (make-thing name desc)
  (let ((current-place-agent #f))
    (define (move-to! self new-place)
     (if current-place-agent (ask current-place-agent 'remove-item! name)) 
     (set! current-place-agent new-place)
     (ask current-place-agent 'add-item! name self ))
    (define (self msg)
      (cond
        ((eq? msg 'name) (lambda (self) name))
        ((eq? msg 'description) (lambda (self) desc))
        ((eq? msg 'place) (lambda (self) current-place))
        ((eq? msg 'place_nice) (lambda (self) (ask current-place 'name)))
        ((eq? msg 'move-to!) move-to!)))
    self))