#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 519 0 17 3 42
#"; Ger underlag f\303\266r laboration 4 problem 2"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #";"
0 0 17 3 88
(
 #" ADT (Abstract Data Type) f\303\266r en k\303\266. En k\303\266 beha"
 #"ndlar elementen f\303\266rst in - f\303\266rst ut."
) 0 0 17 29 1 #"\n"
0 0 4 3 7 #"; H\303\244r "
0 0 14 3 15 #"finns primitiva"
0 0 4 3 1 #" "
0 0 14 3 10 #"funktioner"
0 0 4 3 1 #" "
0 0 14 3 4 #"f\303\266r"
0 0 4 3 1 #" "
0 0 14 3 3 #"att"
0 0 4 3 1 #" "
0 0 14 3 7 #"hantera"
0 0 4 3 1 #" "
0 0 14 3 2 #"en"
0 0 4 3 1 #" "
0 0 14 3 4 #"k\303\266."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 78
(
 #"; Representationen av en "
 #"k\303\266 f\303\266ljer f\303\266rel\303\244sning"
 #"arna och l\303\244roboken, dvs med"
) 0 0 4 29 1 #"\n"
0 0 17 3 73
(
 #"; ett k\303\266huvud som anger f\303\266rsta resp. sista cons-cellen"
 #" i elementlistan."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 17 #"; 2010-02-19 / AH"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #"; skapa en k\303\266"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-queue"
0 0 22 3 1 #")"
0 0 4 3 20 #"                    "
0 0 17 3 9 #"; -> k\303\266 "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 4 #"()))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 15 #"; \303\244r k\303\266n tom?"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"empty-queue?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 12 #"            "
0 0 17 3 24 #"; k\303\266 -> sanningsv\303\244rde "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 35 #"; best\303\245r k\303\266n av bara ett element?"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"singelton?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 14 #"              "
0 0 17 3 23 #"; k\303\266 -> sanningsv\303\244rde"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 42 #"; ge f\303\266rsta (tidigaste inlagda) elementet"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"front-queue"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 13 #"             "
0 0 17 3 16 #"; k\303\266 -> element"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"empty-queue?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 34 #"\"FRONT called with an empty queue\""
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 31 #"; l\303\244gg in ett element i en k\303\266"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 6 #"      "
0 0 17 3 19 #"; element x k\303\266 -> "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"new-pair"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 5 #"())))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"empty-queue?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcar!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 4 3 1 #" "
0 0 14 3 8 #"new-pair"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 4 3 1 #" "
0 0 14 3 8 #"new-pair"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"new-pair"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 4 3 1 #" "
0 0 14 3 8 #"new-pair"
0 0 22 3 5 #")))))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 72
(
 #"; tar bort ett givet element i k\303\266n. Denna funktion skall skri"
 #"vas klart."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"delete-an-element!"
0 0 4 3 1 #" "
0 0 14 3 7 #"element"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 3 #"   "
0 0 17 3 19 #"; element x k\303\266 -> "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 18 #"\"DELETE-AN-ELEMENT"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 5 #"inte "
0 0 19 3 5 #"\303\244nnu"
0 0 19 3 15 #" implementeras\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 22 #";Keep-if rensar listan"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         439 4           0 0           0 72 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"keep-if"
0 0 2 3 1 #" "
0 0 14 3 4 #"test"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"(("
0 0 14 3 4 #"test"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mcons"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"keep-if"
0 0 2 3 1 #" "
0 0 14 3 4 #"test"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 4 #"))))"
0 0 2 29 1 #"\n"
0 0 2 3 12 #"            "
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"keep-if"
0 0 2 3 1 #" "
0 0 14 3 4 #"test"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 5 #")))))"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 76
(
 #"; tar bort ett element fr\303\245n k\303\266n (f\303\266rsta, dvs ti"
 #"digaste inlagda elementet)"
) 0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"delete-queue!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 7 #"       "
0 0 17 3 8 #"; k\303\266 ->"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"empty-queue?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 36 #"\"DELETE! called with an empty queue\""
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcar!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"empty-queue?"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-mcdr!"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 7 #"())))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 29 #"; Skriver ut elementen i k\303\266n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"print-queue"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 1 #")"
0 0 4 3 7 #"       "
0 0 17 3 8 #"; k\303\266 ->"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 12 #"que-elements"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 12 #"que-elements"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"---\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 12 #"que-elements"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcdr"
0 0 4 3 1 #" "
0 0 14 3 12 #"que-elements"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mcar"
0 0 4 3 1 #" "
0 0 14 3 5 #"queue"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 49 #"; Lite tester. Skapa en tom k\303\266 kallad person-que"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-queue"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 62
(
 #"; N\303\244r man testar kommer man att destruktivt att \303\244ndra "
 #"pekare"
) 0 0 4 29 1 #"\n"
0 0 17 3 57
(
 #"; i k\303\266n, som d\303\245 kan bli felaktig. K\303\266r (test) ig"
 #"en s\303\245 "
) 0 0 4 29 1 #"\n"
0 0 17 3 63
(
 #"; \303\245terskapas den initiala test-k\303\266n, som man kan testa "
 #"ifr\303\245n."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 72
(
 #"; Eftersom k\303\266n \303\244r en vanlig lista, s\303\245 kan man s"
 #"e listrepresentationen"
) 0 0 4 29 1 #"\n"
0 0 17 3 73
(
 #"; genom att bara skriva person-que p\303\245 toppniv\303\245n. Efter"
 #"som dessa uttryck"
) 0 0 4 29 1 #"\n"
0 0 17 3 72
(
 #"; h\303\244r ligger i en funkti"
 #"on s\303\245 m\303\245ste vi h\303\244r g"
 #"\303\266ra display av v\303\244rdet."
) 0 0 4 29 1 #"\n"
0 0 17 3 65
(
 #"; H\303\244r b\303\266rjar vi med lite tester som visar att de imple"
 #"menterade"
) 0 0 4 29 1 #"\n"
0 0 17 3 22 #"; primitverna fungerar"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7        1117 4           0 0           0 185 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 58
#";; rensa bland testerna, n\303\244r du ser hur det hela fungerar"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-queue"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"kalle"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"stina"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"front-queue"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 2 #"))"
0 0 17 3 11 #";  => kalle"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"delete-queue!"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 20 3 1 #"'"
0 0 14 3 4 #"lisa"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"eva"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"front-queue"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 17 3 10 #"; => stina"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"delete-queue!"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"insert-queue!"
0 0 20 3 1 #"'"
0 0 14 3 3 #"per"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"print-queue"
0 0 2 3 1 #" "
0 0 14 3 10 #"person-que"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 78
(
 #"; l\303\244gg in egna tester f\303\266r DELETE-AN-ELEMENT! f\303\266"
 #"r att s\303\244kert s\303\244kerst\303\244lla "
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 31 #"; att alla fallen har hanterats"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 10 #"person-que"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 85
(
 #";; Hj\303\244lp: Rita upp hela tiden cons-strukturerna. Se till att "
 #"du ordentligt f\303\266rst\303\245r"
) 0 0 4 29 1 #"\n"
0 0 17 3 61
#";; hur set-mcar! och set-mcdr! fungerar. Hur \303\244ndras pekarna?"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48
#";; G\303\266r en ordenligt fallanalys. Vad kan h\303\244nda?"
0 0 4 29 1 #"\n"
0 0 17 3 85
(
 #";, K\303\266n \303\244r tom, k\303\266n inn"
 #"eh\303\245ller ett element, i vilka fall skall k\303\266huvudet \303"
 #"\244ndras."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #"; Om inte elementet finns i k\303\266n genereras ett felmeddelande a"
 #"v typen"
) 0 0 4 29 1 #"\n"
0 0 17 3 71
(
 #";    (error \"DELETE-AN-ELEMENT no such element:\" element (mcar que"
 #"ue)))"
) 0           0
